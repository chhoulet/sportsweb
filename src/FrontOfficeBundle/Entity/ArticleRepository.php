<?php

namespace FrontOfficeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
	public function getArticle()
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT a 
			FROM FrontOfficeBundle:Article a 
			WHERE a.validationAdmin = true
			AND a.warned = false
			ORDER BY a.dateCreated DESC')
		->setMaxResults(6);

		return $query -> getResult();
	}


	public function getArticleBySportViewed($sport)
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT a 
			FROM FrontOfficeBundle:Article a 
			JOIN a.user u 
			WHERE u.sportViewed LIKE :sport
			AND a.validationAdmin = true
			AND a.warned = false')
		->setParameter('sport', $sport);
	}

	public function triArticle($sport)
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT a 
			FROM FrontOfficeBundle:Article a 	
			JOIN a.sport s 		
			WHERE a.validationAdmin = true
			AND a.warned = false
			AND s.name LIKE :sport')
		->setParameter('sport',  $sport);

		return $query ->getResult();
	}

	public function validArticle()
	{
		$query = $this -> getEntitymanager()->createQuery('
			SELECT a 
			FROM FrontOfficeBundle:Article a 
			WHERE a.validationAdmin = false
			AND a.warned = false
			ORDER BY a.dateCreated DESC');

		return $query -> getResult();
	}

	public function nbArticles()
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT COUNT(a.id)
			FROM FrontOfficeBundle:Article a');

		return $query ->getSingleScalarResult();
	}

	public function getWarnedArticles()
	{
		$query = $this -> getEntityManager()->createQuery('
			Select a 
			FROM FrontOfficeBundle:Article a 
			WHERE a.warned = true
			AND a.validationAdmin = false');

		return $query -> getResult();
	}

	public function getArticlesBySport()
	{
		$query = $this -> getEntityManager() -> createQuery('
			SELECT s.name, COUNT(a.id) as nb
			FROM FrontOfficeBundle:Sport s 
			JOIN s.articles a 
			GROUP BY s.id');

		return $query -> getResult();
	}

	public function nbArticlesWarned()
	{
		$query = $this -> getEntityManager() -> createQuery('
			SELECT COUNT(a.id) 
			FROM FrontOfficeBundle:Article a 
			WHERE a.warned = true 
			AND a.validationAdmin = false');

		return $query -> getSingleScalarResult();
	}

	public function getArticlesByNbComment()
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT a.title, COUNT(c.id) AS nb 
			FROM FrontOfficeBundle:Article a
			JOIN a.comment c
			WHERE a.validationAdmin = true 
			AND c.validationAdmin = true
			GROUP BY a.title
			ORDER BY c.id DESC			
			')
		->setMaxResults(15);

		return $query ->getResult();
	}
}
